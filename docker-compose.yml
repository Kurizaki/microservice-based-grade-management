version: '3.9'

services:
  auth-service:
    build:
      context: ./authentification-service/authentification-service
      dockerfile: Dockerfile.auth
    container_name: auth-service
    ports:
      - "5001:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
    volumes:
      - auth-db-data:/app/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 3s
      retries: 3
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.1'
          memory: 128M

  calc-service:
    build:
      context: ./calculation-service/calculation-service
      dockerfile: Dockerfile.calc
    container_name: calc-service
    ports:
      - "5002:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production

  grade-service:
    build:
      context: ./grade-service/grade-service
      dockerfile: Dockerfile.grade
    container_name: grade-service
    ports:
      - "5003:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
    volumes:
      - grade-db-data:/app/data
    restart: always

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.frontend
    container_name: frontend
    ports:
      - "5004:8080"

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9900:9900"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    depends_on:
      - auth-service
      - calc-service
      - grade-service

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "8080:8080"
    volumes:
      - ./ApiGateway/conf/apigateway.conf:/etc/nginx/nginx.conf
      - ./frontend:/usr/share/nginx/html
    depends_on:
      - auth-service
      - calc-service
      - grade-service
      - frontend
      - prometheus

volumes:
  auth-db-data:
    driver: local
  grade-db-data:
    driver: local
