###################################################
# BASE IMAGE (RUNTIME)
# This image provides the .NET Core runtime (ASP.NET 8.0)
# and sets the working directory to /app.
# It also exposes port 8081 for incoming traffic.
###################################################
FROM mcr.microsoft.com/dotnet/aspnet:8.0 AS base
WORKDIR /app
EXPOSE 8081

###################################################
# BUILD IMAGE (SDK)
# This stage includes the .NET SDK needed to restore,
# build, and publish the .NET project.
###################################################
FROM mcr.microsoft.com/dotnet/sdk:8.0 AS build
WORKDIR /src

# Copy only the .csproj file first
# to take advantage of Docker's layer caching.
COPY ["calculation-service.csproj", "./"]

# Restore project dependencies
RUN dotnet restore "calculation-service.csproj"

# Copy the rest of the source code into the container
COPY . .

# Build the project in Release mode
RUN dotnet build "calculation-service.csproj" -c Release -o /app/build

###################################################
# PUBLISH STAGE
# Publishes the project to a folder in Release mode.
###################################################
FROM build AS publish
RUN dotnet publish "calculation-service.csproj" -c Release -o /app/publish /p:UseAppHost=false

###################################################
# FINAL IMAGE (RUNTIME)
# Copies the published output from the publish stage
# into the final runtime image and sets the entrypoint.
###################################################
FROM base AS final
WORKDIR /app
COPY --from=publish /app/publish .
ENTRYPOINT ["dotnet", "calculation-service.dll"]
