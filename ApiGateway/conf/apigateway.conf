###################################################
# NGINX CORE SETTINGS
# worker_processes: Dynamically uses available CPU cores.
# worker_connections: Defines how many simultaneous connections
# each worker process can handle.
###################################################
worker_processes auto;

events {
    worker_connections 1024;
}

###################################################
# HTTP BLOCK
# Contains global HTTP configuration, including upstreams
# and server definitions.
###################################################
http {
    include /etc/nginx/mime.types;     # Load MIME type mappings
    default_type application/octet-stream;

    sendfile on;                       # Enables efficient file transfer
    keepalive_timeout 65;             # Idle connection timeout (seconds)

    ###################################################
    # UPSTREAMS
    # Define logical "clusters" of backend servers.
    # Each "server <host>:<port>;" references a service
    # running within your cluster or on your network.
    ###################################################
    upstream auth_service {
        server auth-service:8080;
    }

    upstream calc_service {
        server calc-service:8080;
    }

    upstream grade_service {
        server grade-service:8080;
    }

    ###################################################
    # SERVER BLOCK
    # Defines server-level settings. Here, Nginx listens
    # on port 8080 and serves static files, while also
    # proxying API requests to the defined upstreams.
    ###################################################
    server {
        listen 8080;                # Port on which this server listens
        server_name 195.202.218.245;  # Replace with your domain/IP

        ###################################################
        # STATIC FILES LOCATION
        # Serves frontend files from /usr/share/nginx/html.
        # Provides basic CORS headers and sets up a fallback
        # to "auth.html" for missing files.
        ###################################################
        location / {
            absolute_redirect off;
            root /usr/share/nginx/html;          # Path to static files
            index auth.html;                     # Default page
            try_files $uri $uri/ /auth.html;     # Fallback routing
            
            # Debug headers (useful for troubleshooting)
            add_header X-Debug-Path $document_root;
            add_header X-Debug-Uri $uri;
            
            ###################################################
            # CORS HEADERS
            # Allows cross-origin requests from any origin.
            ###################################################
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' '*' always;
            add_header 'Access-Control-Allow-Headers' '*' always;
            add_header 'Access-Control-Expose-Headers' '*' always;
            add_header 'Access-Control-Max-Age' 1728000 always;
            
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*' always;
                add_header 'Access-Control-Allow-Methods' '*' always;
                add_header 'Access-Control-Allow-Headers' '*' always;
                add_header 'Access-Control-Expose-Headers' '*' always;
                add_header 'Access-Control-Max-Age' 1728000 always;
                add_header 'Content-Type' 'text/plain charset=UTF-8';
                add_header 'Content-Length' 0;
                return 204;
            }
            
            # Nginx performance optimizations
            sendfile on;
            tcp_nopush on;
            tcp_nodelay on;
            keepalive_timeout 65;
            types_hash_max_size 2048;
            
            # Security & directory listing settings
            autoindex off;
            allow all;
        }

        ###################################################
        # REVERSE PROXY LOCATIONS
        # For API calls, the path is forwarded to the backend
        # microservices. The proxy_set_header directives
        # forward the original host and client IP.
        ###################################################
        location /auth-api {
            proxy_pass http://auth_service/api/auth;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        location /calc-api {
            proxy_pass http://calc_service/api/calc;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        location /grade-api {
            proxy_pass http://grade_service/api/grade;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
    }
}
