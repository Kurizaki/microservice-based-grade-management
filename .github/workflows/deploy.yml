name: CI/CD Pipeline

on:
  push:
    branches: [main]

jobs:
  docker-deploy:
    name: Docker Compose Deployment
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Deploy to Docker Compose
        id: docker_deploy_step
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SERVER_PASSWORD }}
          timeout: 60s  
          command_timeout: 600s
          script: |
            set -e 
            cd microservice-based-grade-management &&
            git pull origin main &&
            docker-compose pull &&
            docker-compose down &&
            docker-compose build &&
            docker-compose up -d &&
            docker system prune -a --force

      - name: Handle Docker Deploy Failure
        if: failure()  # Führt diesen Schritt nur aus, wenn der vorherige Schritt fehlschlägt
        run: |
          echo "Docker Compose Deployment has failed."
    

  k3s-deploy:
    name: k3s Deployment
    needs: docker-deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set KUBECONFIG
        run: echo "${{ secrets.KUBECONFIG }}" | base64 -d > kubeconfig

      - name: Deploy to k3s
        id: k3s_deploy_step
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SERVER_PASSWORD }}
          timeout: 60s  
          command_timeout: 600s
          script: |
            set -e
            cd microservice-based-grade-management &&
            echo "${{ secrets.KUBECONFIG_B64 }}" | base64 -d > kubeconfig &&
            export KUBECONFIG=/etc/rancher/k3s/k3s.yaml &&
            kubectl apply -f ./k8s/namespace.yml --validate=false &&
            kubectl apply -f ./k8s/prometheus-configmap.yml --validate=false &&
            sleep 5 &&
            kubectl apply -f ./k8s/prometheus-deployment.yml --validate=false &&
            sleep 10 &&
            kubectl apply -f ./k8s/prometheus-service.yml --validate=false &&
            kubectl apply -f ./k8s/ --validate=false

      - name: Handle k3s Deploy Failure
        if: failure()
        run: |
          echo "k3s Deployment ist fehlgeschlagen. Sammle Logs und sende Benachrichtigung..."
          # Hier ebenfalls Platzhalter für Log-Sammlung oder Benachrichtigung
