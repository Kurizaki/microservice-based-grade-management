# Stage 1: Build
FROM mcr.microsoft.com/dotnet/sdk:8.0 AS build
WORKDIR /src
COPY ["authentification-service.csproj", "./"]
RUN dotnet restore "authentification-service.csproj"
COPY . .
RUN dotnet publish "authentification-service.csproj" -c Release -o /app/publish

# Stage 2: Runtime
FROM mcr.microsoft.com/dotnet/aspnet:8.0 AS runtime
WORKDIR /app

# Copy the published app from the build stage
COPY --from=build /app/publish .

# Copy the SQL script to the container
COPY seed_admin.sql /app/seed_admin.sql

# Security hardening
RUN adduser --disabled-password --gecos '' appuser && \
    chown -R appuser:appuser /app
USER appuser

# Run the app and execute the SQL script to seed the admin user
ENTRYPOINT ["sh", "-c", "dotnet authentification-service.dll && sqlite3 AUTHDB.sqlite < /app/seed_admin.sql"]

# Health check
HEALTHCHECK --interval=30s --timeout=3s \
    CMD curl -f http://localhost:8080/health || exit 1

# Expose port
EXPOSE 8080
ENV ASPNETCORE_URLS=http://+:8080
